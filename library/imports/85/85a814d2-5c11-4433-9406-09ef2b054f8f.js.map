{"version":3,"sources":["assets\\Scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpAcc","maxMoveSpeed","accel","startingPosition","setJumpAction","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","space","accUp","setInputControl","a","accLeft","d","accRight","KEY_UP","modifyUpPosition","isJumping","dt","node","y","ySpeed","onLoad","xSpeed","update","x","Math","abs","console","log"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n            // main character's jump height\r\n            jumpHeight: 0,\r\n            // main character's jump duration\r\n            jumpAcc: 0,\r\n            // maximal movement speed\r\n            maxMoveSpeed: 0,\r\n            // acceleration\r\n            accel: 0,\r\n            //starting y position\r\n            startingPosition: 120\r\n    \r\n    },\r\n\r\n    setJumpAction: function () {\r\n        var self = this;\r\n        // jump up\r\n        // when releasing the button, stop acceleration in this direction\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.space:\r\n                    self.accUp = true;\r\n                    break;\r\n            }\r\n        }); \r\n    },\r\n\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // add keyboard event listener\r\n        // When there is a key being pressed down, judge if it's the designated directional button and set up acceleration in the corresponding direction\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = true;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // when releasing the button, stop acceleration in this direction\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = false;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = false;\r\n                    break;\r\n            }\r\n        });        \r\n    },\r\n\r\n    modifyUpPosition: function(isJumping, dt){\r\n        if(isJumping){            \r\n            this.node.y += (this.ySpeed * 0.05)/2;\r\n        }\r\n        else{            \r\n            this.node.y -= (this.ySpeed * 0.05)/2;\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.startingPosition = this.node.y;\r\n        this.accUp = false;\r\n        this.setJumpAction();\r\n        // switch of acceleration direction\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // current horizontal speed of main character\r\n        this.xSpeed = 0;\r\n        this.ySpeed = 0;\r\n        this.isJumping = false;\r\n        // initialize keyboard input listener\r\n        this.setInputControl();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        // update speed of each frame according to the current acceleration direction\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n            this.node.x += this.xSpeed * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n            this.node.x += this.xSpeed * dt;\r\n        }\r\n        if(this.accUp){\r\n            this.ySpeed += this.jumpAcc * 0.05;   \r\n            this.isJumping = true;         \r\n            this.accUp = false;\r\n        }\r\n        // restrict the movement speed of the main character to the maximum movement speed\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reaches its limit, use the max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        if(Math.abs(this.node.y) > this.jumpHeight){  \r\n            this.isJumping = false; \r\n        }\r\n        if(Math.abs(this.node.y) > this.startingPosition || this.isJumping){            \r\n            this.modifyUpPosition(this.isJumping, dt);\r\n        }\r\n        if(Math.abs(this.node.y) == this.startingPosition){\r\n            this.ySpeed = 0;\r\n            console.log(\"Stopped\");\r\n        } \r\n        // update the position of the main character according to the current speed\r\n        \r\n    },\r\n});\r\n"]}