{"persistifyArgs":{"cache":{"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\imports\\85\\85a814d2-5c11-4433-9406-09ef2b054f8f.js":{"source":"\"use strict\";\ncc._RF.push(module, '85a81TSXBFEM5QGCe8rBU+P', 'Player');\n// Scripts/Player.js\n\n\"use strict\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // main character's jump height\n        jumpHeight: 0,\n        // main character's jump duration\n        jumpAcc: 0,\n        // maximal movement speed\n        maxMoveSpeed: 0,\n        // acceleration\n        accel: 0,\n        //starting y position\n        startingPosition: 120\n\n    },\n\n    setJumpAction: function setJumpAction() {\n        var self = this;\n        // jump up\n        // when releasing the button, stop acceleration in this direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.space:\n                    self.accUp = true;\n                    break;\n            }\n        });\n    },\n\n    setInputControl: function setInputControl() {\n        var self = this;\n        // add keyboard event listener\n        // When there is a key being pressed down, judge if it's the designated directional button and set up acceleration in the corresponding direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = true;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = true;\n                    break;\n            }\n        });\n\n        // when releasing the button, stop acceleration in this direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = false;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = false;\n                    break;\n            }\n        });\n    },\n\n    modifyUpPosition: function modifyUpPosition(isJumping, dt) {\n        if (isJumping) {\n            this.node.y += this.ySpeed * 0.05 / 2;\n        } else {\n            this.node.y -= this.ySpeed * 0.05 / 2;\n        }\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.startingPosition = this.node.y;\n        this.accUp = false;\n        this.setJumpAction();\n        // switch of acceleration direction\n        this.accLeft = false;\n        this.accRight = false;\n        // current horizontal speed of main character\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n        this.isJumping = false;\n        // initialize keyboard input listener\n        this.setInputControl();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        // update speed of each frame according to the current acceleration direction\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n            this.node.x += this.xSpeed * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n            this.node.x += this.xSpeed * dt;\n        }\n        if (this.accUp) {\n            this.ySpeed += this.jumpAcc * 0.05;\n            this.isJumping = true;\n            this.accUp = false;\n        }\n        // restrict the movement speed of the main character to the maximum movement speed\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // if speed reaches its limit, use the max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        if (Math.abs(this.node.y) > this.jumpHeight) {\n            this.isJumping = false;\n        }\n        if (Math.abs(this.node.y) > this.startingPosition || this.isJumping) {\n            this.modifyUpPosition(this.isJumping, dt);\n        }\n        if (Math.abs(this.node.y) == this.startingPosition) {\n            this.ySpeed = 0;\n            console.log(\"Stopped\");\n        }\n        // update the position of the main character according to the current speed\n    }\n});\n\ncc._RF.pop();","deps":{}}},"packageCache":{"C:\\Users\\t.dominio\\Desktop\\start_project\\assets\\Scripts\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\assets\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\package.json":false,"C:\\Users\\t.dominio\\package.json":false,"C:\\Users\\package.json":false,"C:\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\assets\\Scripts\\NewScript.js":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\imports\\85\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\imports\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\package.json":false,"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\imports\\85\\85a814d2-5c11-4433-9406-09ef2b054f8f.js":{"__dirname":"C:\\Users\\t.dominio\\Desktop\\start_project\\library\\imports\\85"},"C:\\Users\\t.dominio\\Desktop\\start_project\\assets\\Scripts\\Player.js":false}}}